<?xml version="1.0" encoding="UTF-8"?>
<!-- web.xml to run on localhost only
The results of this go into out/artifacts/MathSpring_exploded
-->
<!--<web-app xmlns="http://java.sun.com/xml/ns/javaee"-->
         <!--xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"-->
         <!--xsi:schemaLocation="http://java.sun.com/xml/ns/javaee-->
		  <!--http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"-->
         <!--version="2.5">-->

<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
                      http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">

    <!-- for debugging only.  used for ?testdb2=true arg to servlet -->

    <context-param>
        <param-name>error.sendEmail</param-name>
        <param-value>false</param-value>
    </context-param>
    <context-param>
        <param-name>error.adminemail</param-name>
        <param-value>marshall@cs.umass.edu</param-value>
    </context-param>
    <context-param>
        <param-name>error.smtpserver</param-name>
        <param-value>loki.cs.umass.edu</param-value>
    </context-param>
    <!-- imgFileDir not used on localhost -->
    <context-param>
        <param-name>imgFileDir</param-name>
        <param-value>Nothing</param-value>
    </context-param>
    <!-- location of resources (images) for 4mality-->

    <context-param>
        <param-name>debug</param-name>
        <param-value>false</param-value>
    </context-param>


    <context-param>
        <param-name>useLearningCompanions</param-name>
        <param-value>true</param-value>
    </context-param>



    <!-- wayang context stuff -->

    <context-param>
        <param-name>pedagogiesFile</param-name>
        <param-value>/pedagogies.xml</param-value>
    </context-param>
    <!-- rose is too slow to use over VPN.  this selects which of the databases (defined as datasources in context.xml) we use
    options are wodbcadmium for cadmium db or wodblocal for db on localhost -->
    <context-param>
        <param-name>wodb.datasource</param-name>
        <!--<param-value>jdbc/wodbrose</param-value>-->
        <param-value>jdbc/wodblocal</param-value>
    </context-param>

    <context-param>
        <param-name>host</param-name>
        <param-value>localhost</param-value>
        <!--<param-value>cadmium.cs.umass.edu</param-value>-->
    </context-param>
    <context-param>
        <param-name>servletPort</param-name>
        <param-value>8080</param-value>
    </context-param>

	<context-param>
		<param-name>webContentPath</param-name>
		<param-value>http://tutor.mathspring.org/mathspring/mscontent/</param-value>
		<!--param-value>http://s3.amazonaws.com/ec2-54-225-52-217.compute-1.amazonaws.com/mscontent/</param-value> -->
	</context-param>
  <context-param>
    <param-name>probplayerPath</param-name>
    <param-value>Problems/probplayer.swf</param-value>
  </context-param>
  <context-param>
    <param-name>probPreviewerPath</param-name>
    <param-value>Problems/problem_checker.swf</param-value>
  </context-param>
  <context-param>
    <param-name>html5Probs</param-name>
    <param-value>html5Probs/</param-value>
  </context-param>
  <context-param>
    <param-name>isDevelopmentEnv</param-name>
    <param-value>false</param-value>
  </context-param>
    
    <!--Relative to the webContentPath setting-->
    <!--<context-param>-->
        <!--<param-name>flashClientPath</param-name>-->
        <!--<param-value>flash/client/</param-value>-->
    <!--</context-param>-->


    <!-- When working on a development machine the html5 content must come from within tomcat because the pages generated by a servlet
    all have localhost:8080/mt as their host which means the host on the URIs to the content must be the same to avoid security violations.
    When deployed to a server the host in the URIs is always something like rose.cs.umass.edu/woj  or rose.cs.umass.edu/html5Probs so there
    will not be a security violation if the HTML5 content lives separately from the Tomcat resources in the Apache web tree
    N.B. The same is true for Flash Problems.   They are loaded by swfobject from javascript and they have to have matching hosts
    in order to avoid security issues.
    -->
  
    <!--Sets whether it is using the 'classic' Flash tutor or the 'new' Javascript tutor-->
    <context-param>
        <param-name>useHybridTutor</param-name>
        <param-value>true</param-value>
    </context-param>

    <!-- end of wayang context stuff -->


    <!-- Wayang web stuff -->


    <servlet>
    <servlet-name>TutorBrain</servlet-name>
    <servlet-class>edu.umass.ckc.wo.woserver.WoTutorServlet</servlet-class>

        <init-param>
            <!-- Use the huy gui by default now.  Use value: old to get the old one. -->
            <param-name>gui</param-name>
            <param-value>huy</param-value>
        </init-param>

    <!--THis controls how frequently the edu.umass.ckc.wo.tutor.intervSel.ExternalActivityInterventionSelector picks an -->
    <!--external activity.-->
    <init-param>
        <param-name>externalActivityPercentage</param-name>
        <param-value>50.0</param-value>
    </init-param>

    <init-param>
        <param-name>useStrategyCaching</param-name>
        <param-value>false</param-value>
    </init-param>

    <init-param>
        <param-name>videoURI</param-name>
        <param-value>http://cadmium.cs.umass.edu/mathspring/video/</param-value>
    </init-param>
    <init-param>
        <param-name>emailLogFilename</param-name>
        <param-value>u:\\wayang\\emailErr.log</param-value>
    </init-param>

        <init-param>
            <param-name>assistmentsLogBackURL</param-name>
            <param-value>https://www.assistments.org/api2/partnerProblemLog</param-value>

            <!--<param-value>https://test1.assistments.org/api2/partnerProblemLog</param-value>-->
        </init-param>


</servlet>




    <servlet>
        <servlet-name>WoAdmin</servlet-name>
        <servlet-class>edu.umass.ckc.wo.woserver.WoAdminServlet</servlet-class>
        <init-param>
            <!-- Use the huy gui by default now.  Use value: old to get the old one. -->
            <param-name>gui</param-name>
            <param-value>huy</param-value>
        </init-param>
        <init-param>
            <param-name>useServletSession</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>sessionTimeoutMinutes</param-name>
            <param-value>30</param-value>
        </init-param>
        <init-param>
            <param-name>prepostProblemURI</param-name>
            <param-value>http://cadmium.cs.umass.edu/mathspring/flash/</param-value>
        </init-param>
        <init-param>
            <param-name>mailServer</param-name>
            <param-value>loki.cs.umass.edu</param-value>
        </init-param>
    </servlet>

    <servlet>
        <servlet-name>mathSpring</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>/mathSpring-servlet.xml</param-value>
        </init-param>
    </servlet>

    <servlet>
        <servlet-name>GritMouseServlet</servlet-name>
        <servlet-class>edu.umass.ckc.wo.woserver.GritMouseServlet</servlet-class>

    </servlet>

    <servlet-mapping>
        <servlet-name>GritMouseServlet</servlet-name>
        <url-pattern>/gritms/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>mathSpring</servlet-name>
        <url-pattern>/tt/*</url-pattern>
    </servlet-mapping>


    <servlet>
        <servlet-name>WoLoginServlet</servlet-name>
        <servlet-class>edu.umass.ckc.wo.login.WoLoginServlet</servlet-class>
        <init-param>
            <!-- Use the huy gui by default now.  Use value: old to get the old one. -->
            <param-name>gui</param-name>
            <param-value>huy</param-value>
        </init-param>
        <!--<load-on-startup>1</load-on-startup>-->
    </servlet>


    <servlet>
        <servlet-name>MathspringSubSessionServlet</servlet-name>
        <servlet-class>edu.umass.ckc.wo.woserver.MathspringSubSessionServlet</servlet-class>


        <init-param>
            <param-name>handlerClassName</param-name>
            <param-value>edu.umass.ckc.wo.servletController.MariHandler</param-value>
        </init-param>

        <init-param>
            <param-name>videoURI</param-name>
            <param-value>http://cadmium.cs.umass.edu/mathspring/video/</param-value>
        </init-param>
        <init-param>
            <param-name>emailLogFilename</param-name>
            <param-value>u:\\wayang\\emailErr.log</param-value>
        </init-param>

    </servlet>



    <servlet>
        <servlet-name>WoTestDbServlet</servlet-name>
        <servlet-class>edu.umass.ckc.wo.woserver.TestDbServlet</servlet-class>

    </servlet>

    <servlet>
        <servlet-name>SimpleJSPServlet</servlet-name>
        <servlet-class>edu.umass.ckc.wo.woserver.SimpleJSPServlet</servlet-class>

    </servlet>

    <servlet>
        <servlet-name>ImageFetch</servlet-name>
        <servlet-class>edu.umass.ckc.wo.woserver.ImageFetchServlet</servlet-class>
    </servlet>

    <servlet>
        <servlet-name>Jersey Web Application</servlet-name>
        <servlet-class>com.sun.jersey.spi.container.servlet.ServletContainer</servlet-class>
        <!--<servlet-class>org.glassfish.jersey.servlet.ServletContainer</servlet-class>-->
        <init-param>
            <param-name>com.sun.jersey.api.json.POJOMappingFeature</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>jersey.config.server.provider.packages</param-name>
            <param-value>edu.umass.ckc.wo.rest</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>

    </servlet>

    <servlet-mapping>
        <servlet-name>Jersey Web Application</servlet-name>
        <url-pattern>/rest/*</url-pattern>
    </servlet-mapping>






    <servlet-mapping>
        <servlet-name>MathspringSubSessionServlet</servlet-name>
        <url-pattern>/mathspringSubSession</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>ImageFetch</servlet-name>
        <url-pattern>/getImage</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>SimpleJSPServlet</servlet-name>
        <url-pattern>/SimpleJSPServlet</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>WoTestDbServlet</servlet-name>
        <url-pattern>/WoTestDbServlet</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>WoLoginServlet</servlet-name>
        <url-pattern>/WoLoginServlet</url-pattern>
    </servlet-mapping>
    <servlet>
        <servlet-name>LineGraphServlet</servlet-name>
        <servlet-class>edu.umass.ckc.wo.charts.LineGraphServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>LineGraphServlet</servlet-name>
        <url-pattern>/LineGraphServlet</url-pattern>
    </servlet-mapping>
    <servlet>
        <servlet-name>BarChartServlet</servlet-name>
        <servlet-class>edu.umass.ckc.wo.charts.BarChartServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>BarChartServlet</servlet-name>
        <url-pattern>/BarChartServlet</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>BarChartServletIvon</servlet-name>
        <servlet-class>edu.umass.ckc.wo.charts.BarChartServletIvon</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>BarChartServletIvon</servlet-name>
        <url-pattern>/BarChartServletIvon</url-pattern>
    </servlet-mapping>


    <servlet-mapping>
        <servlet-name>TutorBrain</servlet-name>
        <url-pattern>/TutorBrain</url-pattern>
    </servlet-mapping>



    <servlet-mapping>
        <servlet-name>WoAdmin</servlet-name>
        <url-pattern>/WoAdmin</url-pattern>
    </servlet-mapping>

    <!-- Makes the HttpSession associated with each request never time out -->
    <session-config>
        <session-timeout>-1</session-timeout>
    </session-config>


    <!-- End of Wayang web stuff -->



</web-app>
